%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Visio-pruning.vsd)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 20:15:35 05/13/12
%%For: (Chih Wang)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 126 98
%%HiResBoundingBox: 0.0 0.0 126.25 98.4375
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3677 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-05-13T20:15:35-05:00</xap:CreateDate>
         <xap:ModifyDate>2012-05-13T20:15:35-05:00</xap:ModifyDate>
         <xap:MetadataDate>2012-05-13T20:15:35-05:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:FD25234F629DE111942AC146669E61BB</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:FD25234F629DE111942AC146669E61BB</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:061cd88a-86da-46ba-84cd-390fd2305d07</stRef:instanceID>
            <stRef:documentID>uuid:bcdbaf87-7238-4073-8bd4-e865b9108366</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Visio-pruning.vsd</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Chih Wang</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 126.25 98.4375 rectclip
q
0.0 0.0 m
126.25 0.0 l
126.25 98.4375 l
0.0 98.4375 l
h
W
n
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
n
[/DeviceRGB] cs 0.847 0.847 0.847 sc
149.039993 19.139999 443.280029 425.099976 rectfill

Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
n
122.46 448.86 m
122.46 448.74 122.46 448.62 122.46 448.38 c
122.4 448.2 122.34 448.02 122.28 447.84 c
122.22 447.66 122.16 447.48 122.04 447.36 c
121.98 447.24 121.86 447.18 121.74 447.18 c
121.62 447.18 121.44 447.18 121.26 447.3 c
121.08 447.42 120.84 447.54 120.54 447.72 c
120.24 447.84 119.88 447.96 119.52 448.08 c
119.1 448.2 118.62 448.26 118.08 448.26 c
117.54 448.26 117.12 448.2 116.7 448.08 c
116.28 447.9 115.98 447.72 115.68 447.42 c
115.44 447.18 115.2 446.88 115.08 446.58 c
114.9 446.22 114.84 445.92 114.84 445.56 c
114.84 445.08 115.02 444.66 115.32 444.36 c
115.62 444.06 116.04 443.76 116.52 443.52 c
117.0 443.28 117.48 443.04 118.02 442.8 c
118.62 442.56 119.1 442.26 119.58 441.9 c
120.06 441.54 120.42 441.12 120.72 440.64 c
121.08 440.16 121.2 439.5 121.2 438.78 c
121.2 437.94 121.08 437.16 120.72 436.44 c
120.42 435.72 119.94 435.12 119.34 434.58 c
118.74 434.1 117.96 433.68 117.12 433.38 c
116.22 433.08 115.26 432.96 114.18 432.96 c
113.64 432.96 113.1 432.96 112.62 433.08 c
112.14 433.14 111.72 433.26 111.3 433.38 c
110.88 433.5 110.58 433.68 110.28 433.8 c
109.98 433.98 109.74 434.16 109.62 434.28 c
109.5 434.4 109.44 434.46 109.38 434.58 c
109.38 434.7 109.32 434.82 109.32 434.94 c
109.32 435.06 109.38 435.12 109.38 435.3 c
109.38 435.42 109.38 435.54 109.44 435.66 c
109.44 435.84 109.5 435.96 109.56 436.08 c
109.62 436.2 109.62 436.32 109.68 436.44 c
109.74 436.56 109.8 436.62 109.86 436.68 c
109.92 436.8 110.04 436.8 110.1 436.8 c
110.22 436.8 110.4 436.74 110.58 436.56 c
110.82 436.38 111.06 436.26 111.42 436.08 c
111.72 435.84 112.14 435.72 112.62 435.54 c
113.1 435.36 113.7 435.3 114.42 435.3 c
115.08 435.3 115.68 435.36 116.1 435.54 c
116.58 435.72 117.0 435.9 117.3 436.2 c
117.6 436.44 117.84 436.74 117.96 437.1 c
118.14 437.46 118.2 437.82 118.2 438.24 c
118.2 438.72 118.02 439.14 117.72 439.44 c
117.42 439.74 117.06 440.04 116.58 440.28 c
116.1 440.58 115.56 440.82 115.02 441.06 c
114.48 441.3 114.0 441.6 113.52 441.96 c
113.04 442.26 112.68 442.68 112.32 443.22 c
112.02 443.7 111.9 444.3 111.9 445.08 c
111.9 445.86 112.02 446.58 112.32 447.24 c
112.62 447.9 113.1 448.5 113.64 448.98 c
114.18 449.46 114.9 449.88 115.68 450.12 c
116.46 450.42 117.36 450.54 118.32 450.54 c
118.74 450.54 119.16 450.54 119.58 450.42 c
120.06 450.36 120.42 450.3 120.78 450.18 c
121.14 450.06 121.44 449.94 121.68 449.82 c
121.98 449.7 122.16 449.58 122.28 449.46 c
122.4 449.34 122.46 449.1 122.46 448.86 c
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
2.279 w
1 j
1 J
n
241.38 239.1 m
241.38 239.1 297.36 142.86 re
[/DeviceRGB] cs 0.251 0.251 0.251 sc
S
Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
n
399.84 300.66 m
399.9 300.42 399.96 300.18 399.96 300.06 c
399.96 299.88 399.96 299.76 399.84 299.7 c
399.72 299.58 399.6 299.52 399.36 299.52 c
399.18 299.52 398.88 299.46 398.52 299.46 c
398.1 299.46 397.8 299.46 397.62 299.52 c
397.38 299.52 397.2 299.58 397.14 299.58 c
397.02 299.64 396.9 299.7 396.84 299.76 c
396.78 299.82 396.78 299.94 396.72 300.06 c
394.74 305.64 l
385.14 305.64 l
383.28 300.12 l
383.22 300.0 383.16 299.88 383.1 299.82 c
383.04 299.76 382.98 299.7 382.86 299.64 c
382.74 299.58 382.62 299.52 382.38 299.52 c
382.2 299.52 381.9 299.46 381.6 299.46 c
381.24 299.46 380.94 299.52 380.76 299.52 c
380.52 299.58 380.34 299.58 380.28 299.7 c
380.16 299.76 380.16 299.88 380.16 300.06 c
380.16 300.24 380.22 300.42 380.28 300.72 c
388.02 322.08 l
388.08 322.2 388.14 322.32 388.2 322.44 c
388.26 322.5 388.38 322.56 388.56 322.62 c
388.68 322.68 388.86 322.68 389.1 322.68 c
389.34 322.74 389.64 322.74 390.0 322.74 c
390.36 322.74 390.72 322.74 390.96 322.68 c
391.2 322.68 391.38 322.68 391.56 322.62 c
391.68 322.56 391.8 322.5 391.92 322.38 c
391.98 322.32 392.04 322.2 392.1 322.08 c
h
389.88 319.56 m
385.92 308.1 l
393.96 308.1 l
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
2.279 w
1 j
1 J
n
87.54 54.54 m
87.54 54.54 328.14 143.58 re
[/DeviceRGB] cs 0.251 0.251 0.251 sc
S
Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
n
259.92 121.98 m
259.92 121.26 259.86 120.6 259.68 120.0 c
259.5 119.34 259.26 118.8 258.9 118.32 c
258.54 117.84 258.18 117.42 257.7 117.06 c
257.22 116.7 256.68 116.4 256.14 116.1 c
255.54 115.86 254.88 115.68 254.22 115.56 c
253.56 115.44 252.78 115.38 251.94 115.38 c
245.88 115.38 l
245.64 115.38 245.4 115.44 245.1 115.68 c
244.86 115.86 244.74 116.16 244.74 116.64 c
244.74 137.16 l
244.74 137.64 244.86 137.94 245.1 138.12 c
245.4 138.3 245.64 138.42 245.88 138.42 c
251.16 138.42 l
252.54 138.42 253.62 138.3 254.52 138.0 c
255.42 137.76 256.14 137.4 256.74 136.86 c
257.28 136.38 257.76 135.78 258.06 135.06 c
258.36 134.34 258.48 133.5 258.48 132.6 c
258.48 132.06 258.42 131.52 258.3 131.04 c
258.18 130.5 258.0 130.08 257.7 129.66 c
257.46 129.24 257.16 128.82 256.74 128.52 c
256.38 128.16 255.9 127.92 255.42 127.68 c
256.08 127.56 256.62 127.38 257.16 127.02 c
257.76 126.72 258.24 126.36 258.6 125.82 c
259.02 125.34 259.38 124.8 259.62 124.14 c
259.86 123.48 259.92 122.76 259.92 121.98 c
h
255.36 132.3 m
255.36 132.84 255.24 133.38 255.12 133.8 c
254.94 134.28 254.7 134.64 254.4 134.94 c
254.04 135.24 253.62 135.48 253.08 135.66 c
252.54 135.84 251.82 135.9 250.98 135.9 c
247.8 135.9 l
247.8 128.46 l
251.28 128.46 l
252.06 128.46 252.72 128.58 253.2 128.76 c
253.68 129.0 254.1 129.24 254.4 129.6 c
254.76 129.96 254.94 130.38 255.12 130.86 c
255.24 131.28 255.36 131.82 255.36 132.3 c
h
256.74 121.8 m
256.74 122.52 256.62 123.12 256.38 123.6 c
256.2 124.14 255.84 124.56 255.42 124.92 c
255.0 125.28 254.52 125.58 253.86 125.76 c
253.2 125.94 252.42 126.0 251.46 126.0 c
247.8 126.0 l
247.8 117.9 l
252.24 117.9 l
252.96 117.9 253.56 117.96 254.1 118.14 c
254.58 118.32 255.06 118.56 255.48 118.92 c
255.84 119.22 256.14 119.64 256.38 120.12 c
256.62 120.6 256.74 121.14 256.74 121.8 c
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
n
231.12 381.96 m
231.12 387.6 235.68 392.16 241.38 392.16 c
247.02 392.16 251.64 387.6 251.64 381.96 c
251.64 376.26 247.02 371.7 241.38 371.7 c
235.68 371.7 231.12 376.26 231.12 381.96 c
[/DeviceRGB] cs 0.0 0.0 0.0 sc
eofill
Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
1.139 w
1 j
1 J
n
231.12 381.96 m
231.12 387.6 235.68 392.16 241.38 392.16 c
247.02 392.16 251.64 387.6 251.64 381.96 c
251.64 376.26 247.02 371.7 241.38 371.7 c
235.68 371.7 231.12 376.26 231.12 381.96 c
h
[/DeviceRGB] cs 0.251 0.251 0.251 sc
S
Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
n
77.28 198.12 m
77.28 203.76 81.9 208.38 87.54 208.38 c
93.18 208.38 97.8 203.76 97.8 198.12 c
97.8 192.42 93.18 187.86 87.54 187.86 c
81.9 187.86 77.28 192.42 77.28 198.12 c
[/DeviceRGB] cs 0.0 0.0 0.0 sc
eofill
Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
1.139 w
1 j
1 J
n
77.28 198.12 m
77.28 203.76 81.9 208.38 87.54 208.38 c
93.18 208.38 97.8 203.76 97.8 198.12 c
97.8 192.42 93.18 187.86 87.54 187.86 c
81.9 187.86 77.28 192.42 77.28 198.12 c
h
[/DeviceRGB] cs 0.251 0.251 0.251 sc
S
Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
n
209.16 382.44 m
209.16 381.78 209.1 381.0 208.98 380.16 c
208.86 379.26 208.62 378.42 208.38 377.52 c
208.08 376.62 207.72 375.78 207.24 375.0 c
206.82 374.16 206.28 373.44 205.68 372.78 c
205.02 372.12 204.3 371.64 203.46 371.22 c
202.62 370.86 201.72 370.68 200.64 370.68 c
200.16 370.68 199.62 370.68 199.2 370.8 c
198.78 370.92 198.36 371.04 198.0 371.28 c
197.64 371.46 197.28 371.7 196.98 371.94 c
196.68 372.18 196.38 372.48 196.14 372.78 c
194.64 365.1 l
194.58 364.98 194.58 364.92 194.52 364.86 c
194.46 364.74 194.34 364.68 194.22 364.68 c
194.1 364.62 193.98 364.56 193.74 364.56 c
193.56 364.5 193.32 364.5 193.02 364.5 c
192.78 364.5 192.54 364.5 192.36 364.56 c
192.18 364.56 192.0 364.62 191.88 364.68 c
191.82 364.68 191.76 364.74 191.7 364.86 c
191.7 364.92 191.64 364.98 191.7 365.1 c
196.2 387.48 l
196.2 387.66 196.32 387.78 196.56 387.9 c
196.74 387.96 197.1 388.02 197.58 388.02 c
197.88 388.02 198.06 388.02 198.18 387.96 c
198.36 387.96 198.48 387.96 198.6 387.9 c
198.66 387.84 198.72 387.78 198.78 387.72 c
198.78 387.66 198.78 387.6 198.78 387.48 c
198.18 384.42 l
198.36 384.84 198.6 385.26 199.02 385.68 c
199.44 386.16 199.92 386.52 200.46 386.94 c
201.0 387.3 201.6 387.66 202.26 387.9 c
202.98 388.14 203.64 388.26 204.36 388.26 c
205.26 388.26 206.04 388.08 206.64 387.78 c
207.24 387.48 207.72 387.06 208.08 386.58 c
208.5 386.04 208.74 385.44 208.92 384.72 c
209.1 384.0 209.16 383.28 209.16 382.44 c
h
206.1 382.26 m
206.1 382.8 206.04 383.22 205.98 383.64 c
205.86 384.12 205.74 384.48 205.56 384.78 c
205.32 385.08 205.08 385.32 204.78 385.5 c
204.48 385.68 204.06 385.74 203.58 385.74 c
202.98 385.74 202.32 385.56 201.66 385.2 c
201.0 384.84 200.34 384.36 199.8 383.7 c
199.2 383.04 198.72 382.32 198.3 381.42 c
197.82 380.58 197.52 379.62 197.28 378.6 c
196.74 375.66 l
197.28 374.82 197.88 374.16 198.54 373.8 c
199.14 373.38 199.86 373.14 200.7 373.14 c
201.3 373.14 201.9 373.32 202.38 373.62 c
202.92 373.92 203.4 374.28 203.76 374.82 c
204.18 375.3 204.54 375.84 204.78 376.5 c
205.08 377.1 205.32 377.76 205.56 378.48 c
205.74 379.14 205.86 379.8 205.98 380.46 c
206.04 381.12 206.1 381.72 206.1 382.26 c
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
Q
[/DeviceGray] cs 0.0 sc
%ADOBeginSubsetFont: GEYAAA+Calibri-Italic Initial
ct_T42Dict begin
-0.473 -0.191 1.211 0.949
 256 array 0 1 255 {1 index exch /.notdef put} for  /GEYAAA+Calibri-Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f326c6b7284000000cc000000606376
7420b49aceb90000012c0000050e6670676da1ea42ac0000063c00000913
676c79666932e2e8000048d8000003c668656164e22cc15500000f500000
0036686865610f48129000000f8800000024686d7478267a5c9b00000fac
000011846c6f63610006db6a00002130000011886d6178700ecd03040000
32b8000000206e616d65bf6febbf000032d8000005007072657065f2c424
000037d8000010fd67646972000000000000000000000000000304050190
00050008059905330000011e05990533000003d0008602000800020f0502
0202040a0204a00002ef4000207b00000000000000004d53202000010020
fb040600fe0001c4079e02262000009f0000000003bd0511000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
00000000000000000000004a004c00540055005600570059004f004e004f
00500051004d005d005f00610063006400650066006700680069006a006b
006c006d006e006d0066006f007000710072007300740075007600710074
00700071007200740075007600780079007a007d00780079007a007b007c
007d0079007c007a007c007d007e007f00800081007e007f008000810082
007f008000810082007e007f008000810082008300850083008400850086
008700880089008600880089008300840085008600870088008900830084
00850086008700880089008a008b008c008d008e008f008a008b008c008d
008f008a008b008c008d008e008f008a008b008c008d008e008f00900095
00900091009200930094009500980099009a009b009c0090009100930096
0097009b009c009f00a20094009600900091009200930094009500960097
00980099009a009b009c009d009e009f00a000a100a200a300a600a70090
00910092009300940095009600980099009f00bc00bd00c100c600be00bf
00bf00c100c200b900be00c200df00e000e400e700e800e9012b01360147
00f200f400cf00640066006a006c006d0070006c006d0069006c00670073
00740075007600770078007a007b007c007d007e00810084008500860087
00880089008a0076007a007b007c007e007f008000820083008400870088
0089008a0077008500870079008200840085008600870088008a0079007a
007c007d007e0081008300840086008700880089008b008c008d008e008f
00900091009200940095008b008c008d008e008f0093009400950093008b
008c008d008e00900091009200930094008c008d008e008f009000910092
009300940095009700980099009a009b009c0096009700980099009a009b
009c009a009c009600980099009a009b009c00960097009b009c009d009e
009f00a000a100a2009d009e009f00a000a100a200a1009d009e009f00a0
00a100a2009d009e009f00a000a100a200a300a500a300a400a500a600a7
00a300a500a300a400a500a600a700a300a400a500a600a700a800a900a8
00a900aa00ab00ac00a800ab00ac00a800a900aa00ab00ac00a800a900aa
00ab00ac00ad00ae00af00b000b100b300b500b600b700b800af00b000b1
00b300b400b700ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700ba00bb00bc00bd
00bf00c000c100c200c300c400ba00bb00bf00c300b900ba00bb00bc00bf
00c100c200c300ba00bc00bf00c200c700c900cb00cc00cd00c500c600c7
00c600c700cb00ce00cf00d100d200db00dc00de00df00e000e400d600e8
00e90123012b00d000d1042600d8050e010503c000c2024e0078042600d7
02990092000040465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948
47464544434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f
181411100f0d0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b004
2651582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b028
2370b101283e01b0282370b10228453ab10200080d2d2c2045b003254561
64b050515845441b2121592d2c2045b0004360442d2c01b00643b0074365
0a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58
b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c
234445b02b23442d2c4b525845441b2121592d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
4523456023456023456023766818b08062202d2cb00426b00426b00425b0
042545234520b003266062636820b0032661658a2344442d2c2045b00054
58b040442045b04061441b2121592d2c45b1302f4523456160b001606944
2d2c4b5158b02f2370b01423421b2121592d2c4b515820b0032545695358
441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f4544
2d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b13420
1bb3330034005944442d2cb0164358b00326458a586466b01f601b64b020
606620581b21b04059b001615923586559b02923442310b029e01b212121
2121592d2cb0164358b004254564b020606620581b21b04059b001612358
6559b0292344b00425b00725082058021b0359b0052510b004252046b004
2523423cb0072510b006252046b00425b0016023423c2058011b0059b005
2510b00425b029e0b0072510b00625b029e0b00425b00725082058021b03
59b00425b003254348b00625b00325b0016043481b215921212121212121
2d2cb0164358b004254564b020606620581b21b04059b0016123581b6559
b0292344b00525b00825082058021b0359b0042510b005252046b0042523
423cb00425b0072508b0072510b006252046b00425b0016023423c205801
1b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0b0
0525b00825082058021b0359b00525b003254348b00425b0072508b00625
b00325b0016043481b2159212121212121212d2c02b00425202046b00425
2342b0052508b003254548212121212d2c02b0032520b0042508b0022543
482121212d2c452320451820b00050205823652359236820b040505821b0
4059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2cb00021
4b5458381b2121592d2cb002435458b0462b1b21212121592d2cb0024354
58b0472b1b212121592d2cb002435458b0482b1b21212121592d2cb00243
5458b0492b1b212121592d2c208a08234b538a4b515a5823381b2121592d
2c0020b200400325b0062649618b3812342d2c0146234660234661232010
20468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c
1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123
018851b1400188535a58b910000020885458b202010243604259b1240188
5158b920000040885458b2020202436042b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b202100243604259b94000020063b80400885458b2024002436042
59595959592d2c451868234b51582320452064b04050587c59688a605944
2d2cb00016b00225b0022501b001233e00b002233eb10102060cb00a2365
42b00b234201b001233f00b002233fb10102060cb006236542b0072342b0
0116012d2c20b82000628a6023622d2cb0072558001b0159b0042510b003
25b0022520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920
b005254ab0042547b004254760b0062547b0806361b00225b0005558b003
25b00725496359b0082558001b0159b00425b0062549b009255cb009255a
58b0092b59b0072546b0806361b0032520b0005558631b2159612320b000
5558b080631b21b08059b0592bb006255c586959b00425202010b0004823
3ab0062658001b0159b0052658b003252f598a12233221212d2cb00625b0
0a2587b00625b009254ab0005358b00625b00a251bb00925b0072559b002
25b00225070cb005256323b00625636020b94000040063535821b00426b0
0426b00a1bb94000040063655158b0042665b0042665b00a1bb00426b004
26b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525
b0052507595920b0005558b00525b0052587b00725b007250bb0092510b0
0b25b0092620b8ffff545821cd1bed59b00525b0052507b00825b00b2549
23b00625b0062587b00a2510b00b25c15920b00051b800522378b00161b0
0225b00725b0072507b00a25b00d254961b08062b00525b005250bb00a25
2338b00625b0062587b00825b008250bb00a2510b00b25c4b00625b00625
07b00925b00c2549b0032554b8ffa723792121212121212121212121212d
2c23b0005458b9400000001bb900004000598ab0005458b9400000001bb9
0000400059b05b2b2d2c08b0005458b9400000001bb900004000590db05b
2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb0
0426b00426080db00426b00426080db05b2b2d00000100000001051f2143
fdb65f0f3cf50019080000000000bbeb7ccc00000000c12af45afc31fe73
09b6079e000000090002000100000000000100000600fe0001c40a4efc31
fde109b60800019a0000000000000000000000000461040e000000000000
0000000001cf000004a1ffca04a1ffca04a1ffca04a1ffca04a1ffca04a1
ffca04a1ffca04a1ffca04a1ffca04a1ffca04a1ffca061bff74061bff74
045a0054042e0073042e0073042e0073042e0073042e0073042e007404ec
005804ec005804ff003f04ff003f03e8005803e8003303e8005803e80043
03e8003b03e8005403e8004d03e8005803e8005803e8005803ad0052050c
006e050c006e050c006e050c006e050c006e04fc005204fc005205400074
020400520204ff25020400160204ff390204ff2d0204ff4e0204ff4c0204
ff770204001b0204ff9d04920052028dffb8028dffa50428005204280052
035d0058035d005803620058035d005803700023045e005806d700520528
00520528005205280052052800520528005205040052053c0072053c0072
053c0072053c0072053c0072053c0072053c0072053c0072053c00720543
00260543002606ef00720422005204220051055000720458005204580052
0458003c04580052039e0004039e0004039efff6039e0001039e0004039e
000403e600a303e6001603e600a303e60094052200930522009305220093
052200930522009305220093052200930522009305220093052200930522
0093048a00c1071f00db071f00db071f00db071f00db071f00db0427ffd1
03e600bf03e6003b03e600bf03e6004d03e6006803bfffe803bfffe803bf
ffe803bfffe803f4ffb703f4ffb703f4ffb703f4ffb703f4ffb703f4ffb7
03f4ffb703f4ffb703f4ffb703f4ffb703f4ffb6055cff8b055cff8b0404
004903ab006903ab006903ab006903ab006903ab006903ab00690465004c
0465004c0477003d0477003d0380004d0380002d0380004d038000200380
001f0380002c03800026038000400380004d0380004d035000470482006b
0482006b0482006b0482006b0482006b0476004704760047049d005901ec
004701ecff4301ec001c01ecff4801ecff2701ecff5501ecff5201ecff71
01ec001101ecff8d041b0047023effb0023eff8003c9004703c9004702e0
004d02e0004d02e6004d02e0004d02f0002503d5004d0606004604790046
047900460479004604790046047900460466004704990060049900600499
006004990060049900600499006004990060049900600499006004ba0049
04ba00490606006203c2004703c2004504a2006003e7004703e7004703e7
004503e70047033f0002033f0002033ffff0033fffee033f0002033f0002
035900800359fff9035900740359007f0485007d0485007d0485007d0485
007d048500730485007d0485007d0485007d0485007d0485007d0485007d
03ed0095061e00a6061e00a6061e00a6061e00a6061e00a603ccffda037e
0086037e0011037e0086037e000a037e00180369fff10369fff10369fff1
0369fff1041d0051041d0051041d0051041d0051041d003a041d0051041d
0051041d0051041d0051041d0051041d00510609002f0609002f041d003d
0354004c0354004c0354003e0354003f0354004c0354004c0746004c06cc
004c05f1004c05f1004c041d005104700051046800510434005003d2004d
03d2004d03d2004d03d2004d03d2004d03d2004d03d2004d03d2004d03d2
004d03d2004d0271ff3d0684ff3d08beff3d04abff1f0683ff3d08bdff3d
043cff3d043cff3d043cff3d043cff3d044fff3d044fff3d044fff3d044f
ff3d043cff3d043cff3d0676ff3d0676ff3d0676ff3d0676ff3d0689ff3d
0689ff3d0689ff3d0689ff3d0676ff3d0676ff3d043cff3d043cff3d0677
ff3d0609ff3d0843ff3d043cff3d043cff3d0483ff3d043cff3d0676ff3d
04e4ff3d04e4ff3d050aff3d071fff3d041d0042041d0042041d0042041d
0042041d004203c4ffbd03c4ffbd03c4ffbd03c4ffbd03c4ffbd041d003f
041d003f042a004d01d6003f01d6ff3f01d6fff801d6ff5001d6ff1b01d6
ff6e01d6ff5101d6ff5e01d6ff8801d6003f03c0003f041b002601eaff3b
01eaff3b01eaff3b03a3003e03a3003e03a3003f01d6003f01d6002d021c
003f01d6ffb501fb004102fd003f0654003f041d003f041d003f041d003f
041d002b041d003f048dfff2041d003f041b004e041b004e041b004e041b
004e041b0030041b004e041b004e041b004e041b004e043c002f043c002f
0684004e041dfff8041dfff8041d005102be003f02be003f02beffea02be
ffff031d0009031d0009031dfff2031dfff1031d0009031d000905a50009
05a500090438ff2b01f1ff1a02ae007102c4007102ae006102bc002a04e6
007104750071047500710475007104750071047500710475007104750071
04750071047500710475007105130071074b007106d9007106d9007106d9
007106d9007106d9007106d9007106d9007106d9007106d9007106d90071
041d0070041d0050041d0070041d0070041d003d041d006b041d0066041d
0069041d0070041d0070041d00700391007c05b8008f05b8008f05b8008f
05b8008f05b8008f0377ffd0039400150394000103940015039400150394
00140329000503290005032900000329000503720071036100810378005a
02d800aa02d5009f024100a602d800aa02a100a801c1fff502d800a702da
009f016200a2016dffe9029700a0015e00a0044c00a002db00a002d600aa
02d7007602d700aa01f000a00230008301e300bb02db00c1028500c303ef
00ce027c005e0286008f0238007d0254000002750000029400000000fd08
0000fce80256000002750000029400000000fd080000fce803290000035f
0000039400000000fc9f0000fc6703290000035f0000039400000000fc9d
0000fc6901ff0000039a000003a2000003a800000000fc650000fc600324
000002f5000003460000036700000000fca00000fc7e0327000003490000
036a00000000fc9d0000fc7d030c0000030f0000031100000000fcac0000
fca9029100000298000002a000000000fce90000fce202cf000002c20000
02b5000003c1000003e10000040000000000fc520000fc3101c9000001d6
000001ce000001ce00000000fd4d0000fd4d0275ffe90000fcdf027ffffa
0000fcec01f7ffe70231000004a1ffca04a1ff97045a0054035300520484
ffe803e8005803e8fec503bfffe804fc005204fcfeb60540007202040052
0204feba0204ff4e042800520495ffcc06d700520528005203ef0000053c
0072053cff0604fc00520422005203abfff403e600a303e600bd03e6fe8b
03e60054061400000427ffd1060000bf0550000c0550fef503f4ffb703f4
ff790404004902fb004703c9ffcf0380004d0380fed10369fff104760047
0476fec904b1006001ec004701ecfebd01ecff5403c9004703e1ffb90606
0046047900460387000b049900600499ff3b0478004603c20047035bfff8
03590080038300830383fea3038300100552000003ccffda0558009b04b1
001204b1ff5404850051048500510439006b043afff70391007804300000
03a5002f03a5002f02c800340434003f0434003f047800400441006c0232
00650232ffdd0232ff7a0232feef03a3003f03b4ffbd044efff80397007d
0302003303030033041b004e041b004e046c00050412ffd30441004b0349
00500319005204550075045500750455006904550009053b004c0536004a
0369ff7605a9007c0592005605920056028900000000fd0a03f400000000
fc36020500f202050137020501060224ffb101ff00c501ffffed04a1ffca
044d0059045a00540370005203700052037600520527ff6903e8005803e8
003303e800540668ffff03ca000305220052052200520522005202040052
0204ff4e028dffb8045800520458005204e3ffae06faffae06d7005204fc
005207030052053c0072053c007204f9005204220052042e0073039e0004
03e600a3043800490438004904b700c2059400000427ffd1051c005404f5
0054047200be06f20054071e005404eb00a106180058044000580462001e
04610070070900520471fffb04ff00a004f200a10504000003f4ffb703ee
004c040400490314004703140047032700470480ff770380004d0380002d
0380002c0578ffeb0380000e04890047048900470489004701ec004701ec
ff55023effb003c8004603c800460432ffa9060600460476004704990060
049b0060046a004703c2004703ab0069033f000203590080039d003b039d
0000042f0094050a000003ccffda048e004a0469004a03fa009a0623004a
0645004a045f007a0583004903e8004903e4002603f00062062f004703ff
0000045f008104630082044d00000601ffa906320047041d005104430000
0430000003d5004a0349001f0349001f02d5003f0349001f04350050041d
004203d2004d03d2004d03d2004d064afff503620003041d0070041d0042
041d004f01d6003f01d6ff7001eaff3b03b6003e03b6003e0415ffbc0601
ffbc056900060437003f0628003f041b004e041f004e042a003f041d003f
041dfff80354004c031d00090654003f06360074039400150394fff103d2
007c05a3004d0377ffd004470070041d007003c000610636007406610074
044a00570554006503bb0066038b0009038d005105c4003f03cbffe5044b
004d042a004d04270067036e0000036e0000036e00000000fca50000fca5
029b00bb029b0051029b006d03b500fa03b5002203b5003f03de00e20260
009b02600056036400dd0361003001ffff950224ffb10224006d0205004a
0585004901ff00ec01ff007f01ff00ff01ff0092035900e9035900820359
00fc0359009501ffff950359ff9802b6007c02b6007902b6009602b60093
0419007f0419006e0419009904190088031aff7102dfff9a03af00e803fc
0108031300cc02df00c2027300480273006603fc000503fc001a073e00a5
073e00ba073e00a5073e00ba03fcff5e03fc00e4020500a8020500b9026d
0075026dffdb0274002b0274ffc5028400660284ffe40240006e0240ffea
024a002b024affe4026d0088026dffee0274003e0274ffd8028400790284
fff703fc00f603fc00dc03fc006503fc004504b000bf043d00a003fc0081
03fc009301c400f7033500f7057500000556000007f7000007270000073c
00000727001406ad00c906ad00c9040e00ed05a400d605ac008b02b60000
03fcffef04b3004b040e002c03fc0016040e001f0434001403fc00cb03fc
fff7040e000003fc006604190038040e004a03f30024039f001c03be0018
039f0005039f004a060c006c082d005203fc001a06e000470411ffff0494
005b02cb005e03ec001103ecffde0455ffcf03d7ffd90436007e03b2004a
0436003f04360005040e0040040e005f040e0020040efff4040effcd040e
ffed040e006a040e0077040e002e040efff90443005f028d005903810009
0373001203ac00040368001503b7005d0349005003b5002203bc0028039f
0045039f0055039f0010039f001b039f0014039f001b039f0050039f0084
039f0023039f00220494006a02cb008d03ec001103ec000d0428000f03d7
00080436007e03b200790436003f04360033040e004d040e005f040e0020
040e0023040e0018040e001d040e006a040e00a6040e002e040e00290321
00b901f800cc02b0008402ad008102db008302a6008502df00c8029100bd
02e1009f02df009f02ea00c502df00c502d000b401bc00cf01bc006f0321
000101f8001402b0ffcc02adffc902dbffcb02a6ffcd02df001002910005
02e1ffe702dfffe702ea000d02df000d02d0fffc01bc001701bcffb7029d
001101f500300252ffe60249ffdd024affd80246ffdf025100040238000c
0257ffe5024dffee029d009301f500b2025200680249005f024a005a0246
0061025100860238008e02570067024d007002b1fee50313fffe055ffffe
0569fffe0517fffe0569fffe052efffd0553fffd05c9005e05c9005e0567
004d05b7004d05a2004d05cd0063057d004c05a2004c052affd405b80061
084e00610581006307cd005903fc005903fc005f03fc003303fc003c03fc
004903fc004a03fc004703fc005703fc002203fc000303fc000303fc0003
03fc004e05e9002c0405004806d300880443005002edff7103fc00560484
ffe80550000c044efff8066500a10454ffbf0416006c073e009a073e0096
073e00c9073e00c9070e00af070e013a070e00af070e013a0a4e009a0638
009f04660028000000000000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
015000000150000001500000015000000150000001500000015000000150
000001500000015000000150000001500000015000000150000001500000
0150000001500000015000000268000003c6000003c6000003c6000003c6
000003c6000003c6000003c6000003c6000003c6000003c6000003c60000
03c6000003c6000003c6000003c6000003c6000003c6000003c6000003c6
000003c6000003c6000003c6000003c6000003c6000003c6000003c60000
03c6000003c6000003c6000003c6000003c6000003c6000003c6000003c6
000003c6000003c6000003c6000003c6000003c6000003c6000003c60000
03c6000003c6000003c6000003c6000003c6000003c6000003c6000003c6
000003c6000003c6000003c6000003c6000003c6000003c6000003c60000
03c6000003c6000003c6000003c6000003c6000003c6000003c6000003c6
000003c6000003c6000003c6000003c6000003c6000003c6000003c60000
03c6000003c6000003c6000003c6000003c6000003c6000003c6000003c6
000003c6000003c6000003c6000003c6000003c6000003c6000003c60000
03c6000003c6000003c6000003c6000003c6000003c6000003c6000003c6
000003c6000003c6000003c6000003c6000003c6000003c6000003c60000
03c6000003c6000003c6000003c6000003c6000003c6000003c6000003c6
000003c6000003c6000003c6000003c6000003c6000003c6000100000461
00d4000700b0000700020010002f0060000009e9014e000400010000000e
00ae000000030000000000640000000000030000000700fa006400010000
000000000032015e00010000000000030015019000010000000000040015
01a50001000000000006001501ba0001000000000007007d01cf00030001
040900000064024c0003000104090001001c02b00003000104090002000e
02cc0003000104090003002a02da0003000104090004002a030400030001
04090006002a032e000300010409000700fa035800a90020003200300030
00360020004d006900630072006f0073006f0066007400200043006f0072
0070006f0072006100740069006f006e002e00200041006c006c00200052
00690067006800740073002000520065007300650072007600650064002e
00430061006c006900620072006900200069007300200065006900740068
006500720020006100200072006500670069007300740065007200650064
002000740072006100640065006d00610072006b0020006f007200200061
002000740072006100640065006d00610072006b0020006f00660020004d
006900630072006f0073006f0066007400200043006f00720070006f0072
006100740069006f006e00200069006e002000740068006500200055006e
0069007400650064002000530074006100740065007300200061006e0064
002f006f00720020006f007400680065007200200063006f0075006e0074
0072006900650073002ea92032303036204d6963726f736f667420436f72
706f726174696f6e2e20416c6c205269676874732052657365727665642e
5044505049432b43616c696272692d4974616c69635044505049432b4361
6c696272692d4974616c69635044505049432b43616c696272692d497461
6c696343616c696272692069732065697468657220612072656769737465
7265642074726164656d61726b206f7220612074726164656d61726b206f
66204d6963726f736f667420436f72706f726174696f6e20696e20746865
20556e697465642053746174657320616e642f6f72206f7468657220636f
756e74726965732e00a9002000320030003000360020004d006900630072
006f0073006f0066007400200043006f00720070006f0072006100740069
006f006e002e00200041006c006c00200052006900670068007400730020
00520065007300650072007600650064002e005000440050005000490043
002b00430061006c00690062007200690052006500670075006c00610072
005000440050005000490043002b00430061006c0069006200720069002d
004900740061006c00690063005000440050005000490043002b00430061
006c0069006200720069002d004900740061006c00690063005000440050
005000490043002b00430061006c0069006200720069002d004900740061
006c0069006300430061006c006900620072006900200069007300200065
006900740068006500720020006100200072006500670069007300740065
007200650064002000740072006100640065006d00610072006b0020006f
007200200061002000740072006100640065006d00610072006b0020006f
00660020004d006900630072006f0073006f0066007400200043006f0072
0070006f0072006100740069006f006e00200069006e0020007400680065
00200055006e006900740065006400200053007400610074006500730020
0061006e0064002f006f00720020006f007400680065007200200063006f
0075006e00740072006900650073002eb10903b8027ab21e3e1fb80279b2
1e3e1fb80278b21e0b1fb80277b21e0b1fb80276b21e3a1fb80275b21e3a
1fb80274b21e3e1fb80273b21e3b1fb80272b21e3c1fb80271b21e3c1fb8
0270b21e3c1fb8026fb21e3d1fb8026eb21e3d1fb8026db21e3e1fb8026c
b21e3e1fb8026bb21d411fb8026ab21d411fb80269b21d421fb80268b21d
431fb80267b21d431fb80266b21d431fb80265b21d431fb80264b21d431f
b80263b21d411fb80262b21d421fb80261b21d421fb80260b21d431fb802
5fb21d431fb8025eb21c451fb8025db21c451fb8025cb21c451fb8025bb2
1c451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c45
1fb80256b21c451fb80255b21c451fb80254b21c451fb80252b21c451fb8
0251b21c451fb80250b21c451fb8024fb21c451fb8024eb21c441fb8024d
b21c451fb8024cb21c451fb8024bb21c451fb8024ab21c451fb80249b21c
451fb80248b21c451fb80247b21c451fb80246b21c451fb80245b21c451f
b80244b21b491fb80243b21b4a1fb80242b21b4a1fb80241b21b4a1fb802
40b21b4b1fb8023fb21b4b1fb8023eb21b4c1fb8023db21b4c1fb8023cb2
1b4c1fb8023bb21b4c1fb8023ab21b4c1fb80253b21b4c1fb80239b21b49
1fb80238b21b491fb80237b21b4a1fb80236b21b4a1fb80235b21b4a1fb8
0234b21b4b1fb80233b21b4b1fb80232b21b4c1fb80231b21b4c1fb80230
b21b4c1fb8022fb21b4c1fb8022eb21b4c1fb8022db21b491fb8022cb21b
4a1fb8022bb21b4b1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1f
b80227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb802
23b21b4b1fb80222b21b4c1fb80221b21b4c1fb80220b21b4c1fb8021fb2
1b4c1fb8021eb21b4c1fb8021db21a4e1fb8021cb21a4e1fb8021bb21a4f
1fb8021ab21a4f1fb80219b21a4f1fb80218b21a4e1fb80217b21a4e1fb8
0216b21a4f1fb80215b21a4f1fb80214b21a4f1fb80213b21a4e1fb80212
b21a4e1fb80211b21a4f1fb80210b21a4e1fb8020fb21a4e1fb8020eb21a
4f1fb8020db21a4f1fb8020cb21a4f1fb8020bb21a4f1fb8020ab21a4f1f
b80209b219501fb80208b219511fb80207b219511fb80206b219511fb802
05b219511fb80204b219501fb80203b219511fb80202b219511fb80201b2
19511fb80200b219511fb801ffb219511fb801feb219511fb801fdb21950
1fb801fcb219511fb801fbb219511fb801fab219511fb801f9b219511fb8
01f8b219511fb801f7b219511fb801f6b218531fb801f5b218531fb801f4
b218541fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b218
531fb801efb218531fb801eeb218541fb801edb218541fb801ecb218541f
b801ebb218541fb801eab218531fb801e9b218531fb801e8b218531fb801
e7b218541fb801e6b218541fb801e5b218541fb801e4b218541fb801e3b2
18531fb801e2b218531fb801e1b218541fb801e0b218541fb801dfb21854
1fb801deb218541fb801ddb217561fb801dcb217561fb801dbb217571fb8
01dab217571fb801d9b217561fb801d8b217561fb801d7b217571fb801d6
b217571fb801d5b217571fb801d4b217571fb801d3b217561fb801d2b217
571fb801d1b217561fb801d0b217561fb801cfb217571fb801ceb217571f
b801cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801
c9b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b2
17571fb801c4b2163e1fb801c3b2163f1fb801c2b2163f1fb801c1b2165b
1fb801c0b2165b1fb801bfb2165b1fb801beb2165b1fb801bdb2165b1fb8
01bcb2165b1fb801bbb2165b1fb801bab2163f1fb801b9b2163f1fb801b8
b2165b1fb801b7b2165b1fb801b6b2165b1fb801b5b2165b1fb801b4b216
5b1fb801b3b2165b1fb801b2b2165b1fb801b1b2163f1fb801b0b2163e1f
b801afb2163f1fb801aeb2163f1fb801adb2165b1fb801acb2165b1fb801
abb2165b1fb801aab2165b1fb801a9b2165b1fb801a8b2163e1fb801a7b2
163f1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b
1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2165b1fb8
019eb215621fb8019db215621fb8019cb215631fb8019bb215641fb8019a
b215651fb80199b215661fb80198b215661fb80197b215661fb80196b215
661fb80195b215661fb80194b215661fb80193b215661fb80192b215611f
b80191b215621fb80190b215631fb8018fb215641fb8018eb215641fb801
8db215651fb8018cb215661fb8018bb215661fb8018ab215631fb80189b2
15641fb80188b215551fb80187b215611fb80186b215621fb80185b21562
1fb80184b215631fb80183b215651fb80182b215661fb80181b215661fb8
0180b215661fb8017fb215661fb8017eb215661fb8017db215661fb8017c
b215661fb8017bb215661fb8017ab215451fb80179b215611fb80178b215
621fb80177b215621fb80176b215631fb80175b215641fb80174b215641f
b80173b215651fb80172b215661fb80171b215661fb80170b215661fb801
6fb215661fb8016eb215661fb8016db215661fb8016cb215661fb8016bb2
15551fb8016ab215451fb80169b215451fb80168b215361fb80167b21536
1fb80166b214821fb80165b214561fb80164b2147f1fb80163b214551fb8
0162b214561fb80161b214401fb80160b214551fb8015fb214561fb8015e
b2147e1fb8015db214831fb8015cb214851fb8015bb2133d1fb8015ab213
1e1fb80159b2131e1fb80158b2130a1fb80157b2130a1fb80156b2130b1f
b80155b2133a1fb80154b2133a1fb80153b2133a1fb80152b2133b1fb801
51b2133c1fb80150b2133c1fb8014fb212451fb8014eb212461fb8014db2
12461fb8014cb212451fb8014bb212451fb8014ab212461fb80149b21246
1fb80148b212461fb80147b212441fb80146b212451fb80145b212461fb8
0144b212461fb80143b211471fb80142b211571fb80141b211581fb80140
b211591fb8013fb2115a1fb8013eb2115a1fb8013db2115b1fb8013cb211
5b1fb8013bb2115b1fb8013ab2115b1fb80139b2112b1fb80138b2112c1f
b80137b211391fb80136b211391fb80135b211461fb80134b211471fb801
33b211471fb80132b211551fb80131b211551fb80130b211561fb8012fb2
11561fb8012eb211571fb8012db211571fb8012cb211581fb8012bb21159
1fb8012ab211591fb80129b2115a1fb80128b2115a1fb80127b2115b1fb8
0126b2115b1fb80125b2115b1fb80124b2115b1fb80123b211591fb80122
b2115a1fb80121b211391fb80120b211471fb8011fb211561fb8011eb211
561fb8011db211591fb8011cb211591fb8011bb2115b1fb8011ab2115b1f
b80119b2115b1fb80118b211561fb80117b211561fb80116b211571fb801
15b211571fb80114b211581fb80113b2115a1fb80112b2115a1fb80111b2
115b1fb80110b2115b1fb8010fb2115b1fb8010eb2115b1fb8010db2115a
1fb8010cb2115b1fb8010bb2105d1fb8010ab2105e1fb80109b2105f1fb8
0108b2105f1fb80107b2105f1fb80106b2105f1fb80105b2105d1fb80104
b2105e1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff
105f1fff105d1ffe105f1ffd105f1ffc105f1ffb105f1ffa105d1ff9105e
1ff8105f1ff7105f1ff6105f1ff5105f1ff40f621ff30f621ff20f631ff1
0f641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f64
1fe90f641fe80f641fe70f641fe60f621fe50f621fe40f641fe30f621fe2
0f621fe10f631fe00f641fdf0f641fde0f641fdd0f641fdc0f641fdb0f64
1fda0e671fd90e681fd80e681fd70e681fd60e681fd50e671fd40e681fd3
0e681fd20e681fd10e671fd00e681fcf0e681fce0e681fcd0e681fcc0e68
1fcb0e681fca0e681fc90e681fc80d6b1fc70d6c1fc60d2a1fc50d6c1fc4
0d2c1fc30d6b1fc20d6c1fc10d6d1f40ffc00d6a1fbf0d691fbe0d681fbd
0d6b1fbc0d311fbb0d311fba0d311fb90c711fb80c721fb70c731fb60c74
1fb50c741fb40c741fb30c731fb20c741fb10d311fb00d311faf0d311fae
0d311fad0d311fac0d311fab0d311faa0d311fa90b7e1fa80b7a1fa70b79
1fa60b7a1fa50b7c1fa40b7d1fa30b7e1fa20b7e1fa10b7e1fa00b7e1f9f
0b7e1f9e0b7e1f9d0b7e1f9c0b7e1f9b0b7e1f9a0b2d1f990b2d1f980aa7
1f970aa51f960aa71f950aa71f940aa71f930aa71f920a681f910a821f90
0a9b1f8f0a9d1f8e0a9f1f8d0aa71f8c0aa71f8503251f8403381f830138
1f8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7d
db7d404d060a7c557a557bab7a557955775578ab775576ab755504751475
747503f47501ab750144750130750102007510752075030c7455725573ab
7255007250728072b072043bb072e072020072010ab8ffc0b3721b1e46b8
ffc0407c720d104671556f5570ab6f556e666d556a03251f6938675568ab
67556638645565ab645563386255613860555f385d555eab5d555c385a55
5bab5a55593858555703251f5638545555ab54555338515552ab51554f38
4e554e03251f4d384b554cab4b554a38485549ab4855473846554503381f
001c101c201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04
001bb01bc01b03120f1a1f1a02290f1901434f19016f197f198f19030f18
cf18024018292c460f17cf17df17ef1704134017292e4600161016201603
15b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d
162326460f15010f151f1502451f15010011e011f0110315bf10cf10020f
0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f
0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b
02553f0b4f0b02400b3f4346400b2d304600030120010100011001200103
08b8ffc0b401151f4603bc01000100000500010190b154532b2b4bb807ff
524bb009505bb00188b02553b00188b040515ab00688b000555a5b58b101
018e59b101024354b0144b515a58b101018e59858d8d001d424bb01d5358
b203a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d42
592b5e7375732b2b745e732b2b5e73742b73742b7374745e7301755e7374
2b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e
732b2b5e735f73737373742b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b185f5e00000000>
[967 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 0 <00050000fe7303da050e00030007003b00550056004fb52d162d16083c41
0a01ed00490007016400020020018c000800010164401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103dafc5b03
4ffd06027b1f456e4e24021f1b0e140c050120051f17083d4f2e130f2135
2828402f1f070a060205080608293a4422445e3a1afeb503070b070a2016
161a0e0504070c0809201913190e04fe46050efaf2050efb43046cfb9403
313467523605980a0802040606bc1b17253b4621192b20130f13100c0e05
131612060713120b263d4afd8b08171a17070a0a070c100a091818160809
0a060c10fd38>GEYAAA+Calibri-Italic AddT42Char 
GEYAAA+Calibri-Italic /CharStrings get begin
end
end
%ADOEndSubsetFont
[/N39 (GEYAAA+Calibri-Italic) 1 TZ
42.2474 76.3455 m
%ADOBeginSubsetFont: GEYAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GEYAAA+Calibri-Italic gcheck setglobal} if
1 336 1005 <0001005f000003530517002e008dba027d027e00582bb10102435558b900
30ffc040180f024d0030010f032a142b1320141314001a0b2a25081514b8
014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd111239012f
c4cd393911331133113331305f5e5d2b1b400a0030010f032a25081514b8
014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd1112393130
015f5e5d5925140e042321222635343e04332113050606262635343e0237
253e0333321e02070333321603530305080c0f09fd5b0c0f0305090c100a
010ec3fee710140d05050b120e0151050d121911191f110301e2ea0e0b66
06151716130b141105131618120d03ce94080506100c0b21211e08bf0304
040104070b06fb8f1300>GEYAAA+Calibri-Italic AddT42Char 
GEYAAA+Calibri-Italic /CharStrings get begin
/one 1005 def
end
GEYAAA+Calibri-Italic /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N39 5.2003 Tf
(1) show
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
n
58.74 199.38 m
58.74 198.72 58.68 197.94 58.56 197.04 c
58.44 196.2 58.26 195.36 57.96 194.46 c
57.66 193.56 57.3 192.72 56.88 191.88 c
56.4 191.1 55.86 190.32 55.26 189.72 c
54.6 189.06 53.88 188.52 53.04 188.16 c
52.26 187.8 51.3 187.56 50.28 187.56 c
49.74 187.56 49.26 187.62 48.78 187.74 c
48.36 187.86 47.94 187.98 47.58 188.16 c
47.22 188.4 46.86 188.58 46.56 188.88 c
46.26 189.12 45.96 189.42 45.72 189.72 c
44.22 182.04 l
44.16 181.92 44.16 181.86 44.1 181.74 c
44.04 181.68 43.92 181.62 43.86 181.56 c
43.74 181.56 43.56 181.5 43.38 181.5 c
43.14 181.44 42.9 181.44 42.6 181.44 c
42.36 181.44 42.12 181.44 41.94 181.5 c
41.76 181.5 41.58 181.56 41.52 181.56 c
41.4 181.62 41.34 181.68 41.28 181.74 c
41.28 181.86 41.28 181.92 41.28 182.04 c
45.78 204.42 l
45.78 204.6 45.9 204.72 46.14 204.84 c
46.32 204.9 46.68 204.96 47.22 204.96 c
47.46 204.96 47.64 204.96 47.82 204.9 c
47.94 204.9 48.06 204.84 48.18 204.84 c
48.3 204.78 48.3 204.72 48.36 204.66 c
48.36 204.6 48.36 204.48 48.36 204.42 c
47.76 201.36 l
47.94 201.78 48.24 202.2 48.6 202.62 c
49.02 203.04 49.5 203.46 50.04 203.88 c
50.58 204.24 51.18 204.54 51.9 204.84 c
52.56 205.08 53.22 205.2 53.94 205.2 c
54.84 205.2 55.62 205.02 56.22 204.72 c
56.82 204.42 57.3 204.0 57.72 203.46 c
58.08 202.98 58.38 202.38 58.5 201.66 c
58.68 200.94 58.74 200.22 58.74 199.38 c
h
55.68 199.2 m
55.68 199.68 55.62 200.16 55.56 200.58 c
55.44 201.0 55.32 201.42 55.14 201.72 c
54.96 202.02 54.66 202.26 54.36 202.44 c
54.06 202.56 53.64 202.68 53.22 202.68 c
52.56 202.68 51.9 202.5 51.24 202.14 c
50.58 201.78 49.98 201.3 49.38 200.64 c
48.84 199.98 48.3 199.26 47.88 198.36 c
47.4 197.46 47.1 196.56 46.92 195.48 c
46.32 192.54 l
46.86 191.76 47.46 191.1 48.12 190.68 c
48.72 190.32 49.44 190.08 50.28 190.08 c
50.88 190.08 51.48 190.26 52.02 190.56 c
52.5 190.86 52.98 191.22 53.34 191.76 c
53.76 192.24 54.12 192.78 54.42 193.44 c
54.66 194.04 54.96 194.7 55.14 195.36 c
55.32 196.08 55.44 196.74 55.56 197.4 c
55.62 198.06 55.68 198.66 55.68 199.2 c
[/DeviceRGB] cs 0.0 0.0 0.0 sc
f
Q
9.242 36.1782 m
%ADOBeginSubsetFont: GEYAAA+Calibri-Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GEYAAA+Calibri-Italic gcheck setglobal} if
1 616 1006 <00010020000003ca0521004300a6ba027d027e00582bb10102435558b900
45ffc040090f024d0045010f0340b80230b71212270027000d1ab80264b2
380d2ebb01300024001f012c40091a133f030833531240b80126b3400854
282b183f1a4dfdc13f121739fdd4ed012fd4ed1239392f2f3910ed31305f
5e5d2b1bb50045010f032ebb01300024001f012c40091a133f0308335312
40b80126b3400854282b183f1a4dfdc13f121739fdd4ed3130015f5e5d59
25140e042321222e0235343e0237013e0535342e0223220e022322263534
3e04373e0333321e0215140e04070721321603520306090d100afd350d12
0a05030c1815014d4e714d2e1a080f254434396854390b0a0c030307090b
070b415c703c607e491d0c233f658f63fa0228110e6906161718120c060b
0f0a0a20262712012444776757483b171837302022292314130813161614
13070b2422193652602b29565f6a7b8f54d61900>GEYAAA+Calibri-Italic AddT42Char 
GEYAAA+Calibri-Italic /CharStrings get begin
/two 1006 def
end
GEYAAA+Calibri-Italic /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(2) show
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
n
138.84 444.24 m
138.84 449.88 143.4 454.5 149.04 454.5 c
154.74 454.5 159.3 449.88 159.3 444.24 c
159.3 438.54 154.74 433.98 149.04 433.98 c
143.4 433.98 138.84 438.54 138.84 444.24 c
[/DeviceRGB] cs 0.0 0.0 0.0 sc
eofill
Q
q
0.219421 0.0 0.0 0.219421 -3.94958 -3.94958 cm
1.139 w
1 j
1 J
n
138.84 444.24 m
138.84 449.88 143.4 454.5 149.04 454.5 c
154.74 454.5 159.3 449.88 159.3 444.24 c
159.3 438.54 154.74 433.98 149.04 433.98 c
143.4 433.98 138.84 438.54 138.84 444.24 c
h
[/DeviceRGB] cs 0.251 0.251 0.251 sc
S
Q
Q
/GEYAAA+Calibri-Italic /Font _pdfUndefineResource
/N39 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
